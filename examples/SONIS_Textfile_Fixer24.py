# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kr0zJ9ashSoiTBk_F-5tyVyjxEhfRN2S
"""
import os
import pandas as pd
import datetime
import numpy as np
from datetime import timedelta
from datetime import date


def main1():  # Specify the directory to search for CSV files

    directory = r'C:\Users\agregware\OneDrive - The Charleston School of Law LLC\Documents\Python\Todo'  # Current directory, change as needed

    # Check if a CSV file was found and read it into a DataFrame

    # Initialize a variable to hold the path of the first found CSV file
    csv_file_path = None

    # Search for the first CSV file in the directory
    for filename in os.listdir(directory):
        if filename.endswith('.csv'):
            csv_file_path = os.path.join(directory, filename)
            break  # Stop after finding the first CSV file

    # Check if a CSV file was found and read it into a DataFrame
    if csv_file_path:
        df = pd.read_csv(csv_file_path, parse_dates=['Event_Date'], encoding='ISO-8859-1')
        print(f"Loaded DataFrame from: {csv_file_path}")
        print(df.head())  # Display the first few rows of the DataFrame

        print("File found! " + csv_file_path)
        print(f"Loaded DataFrame from: {csv_file_path}")
        print(df.head())  # Display the first few rows of the DataFrame
        min_length = 9
        df1 = df[df['ID'].str.len() == min_length]
        df1.loc[df1["ID"].str.len() == 10]
        df1['ID'] = df1['ID'].str.replace(" ", "")
        eventID = 0
        eventDate = ""
        eventID = checkonID(eventID)
        df.assign(event=eventID)
        tf1 = df1.assign(event=eventID)[['event'] + df1.columns.tolist()]
        tf2 = tf1.assign(true='1')
        eventDate = eventAdded(eventDate)
        dt1 = tf2.loc[tf2['Event_Date'] == eventDate]
        af1 = dt1.drop('Event_Date', axis=1)
        af2 = af1.sort_values('ID')
        af3 = af2.drop_duplicates()
        today = date.today()
        tdt = today.strftime("%m%d%y")
        print(af3)
        af3.loc[af3["ID"].str.len() == 10]
        os.chdir(r'C:\Users\agregware\OneDrive - The Charleston School of Law LLC\Documents\Python\Todo')
        np.savetxt('Event_' + str(eventID) + '_' + str(tdt) + '.txt', af3, fmt=('%0s %0s%1s'))
        print('Your file, export_test.txt is ready!')
    else:
        print("No CSV files found in the specified directory.")
    if csv_file_path:

        print(f"Loaded DataFrame from: {csv_file_path}")
        max_length = 9
        short_strings = df[df['ID'].str.len() < max_length]
        print(short_strings)
        today = date.today()
        tdt = today.strftime("%m%d%y")
        af4 = np.savetxt('Errors_' + str(tdt) + '.txt', short_strings['ID'], fmt=('%1s'))
        print('Please reference your errors file to fix the following errors:')
        print(short_strings['ID'])
        print('Error File located in the Todo folder...')
        print('Errors_' + str(eventID) + '_' + str(tdt) + '.txt')
    else:
        print("No CSV files found in the specified directory.")


def checkonID(eventID):
    eventNum = int(input('Please Enter an ID:'))
    print('The Event ID is: ', eventNum)
    eventID = eventNum
    return eventID


def eventAdded(eventDate):
    import datetime
    eventDate = input('Please Enter a Date:')
    return eventDate


def mainError():  # Specify the directory to search for CSV files

    directory = r'C:\Users\agregware\OneDrive - The Charleston School of Law LLC\Documents\Python\Todo'  # Current directory, change as needed

    # Specify the directory to search for CSV files
    # Initialize a variable to hold the path of the first found CSV file
    csv_file_path = None

    # Search for the first CSV file in the directory
    for filename in os.listdir(directory):
        if filename.endswith('.csv'):
            csv_file_path = os.path.join(directory, filename)
            break  # Stop after finding the first CSV file

    # Check if a CSV file was found and read it into a DataFrame
    if csv_file_path:
        df = pd.read_csv(csv_file_path, parse_dates=['Event_Date'], encoding='ISO-8859-1')
        print("File found! " + csv_file_path)
        print(f"Loaded DataFrame from: {csv_file_path}")
        max_length = 9
        short_strings = df[df['ID'].str.len() < max_length]
        print(short_strings)
        today = date.today()
        tdt = today.strftime("%m%d%y")
        af4 = np.savetxt('Errors_' + str(tdt) + '.txt', short_strings['ID'], fmt=('%1s'))
        print('Please reference your errors file to fix the following errors:')
        print(short_strings['ID'])
        print('Error File located in the Todo folder...')
        print('Errors_' + str(eventID) + '_' + str(tdt) + '.txt')
    else:
        print("No CSV files found in the specified directory.")


main1()